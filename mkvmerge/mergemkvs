#!/bin/bash
# DESC: Merge all MKV files in ~/Videos directory into a single file

# MKV Merge Script with Rename Prompt
# Merges all MKV files in ~/Videos and prompts for final filename

VIDEOS_DIR="$HOME/Videos"
TEMP_OUTPUT="$VIDEOS_DIR/temp_merged_output.mkv"

# Check if mkvmerge is installed
if ! command -v mkvmerge &> /dev/null; then
    echo "‚ùå Error: mkvmerge is not installed!"
    echo ""
    echo "Install mkvtoolnix package:"
    echo "  Ubuntu/Debian: sudo apt install mkvtoolnix"
    echo "  Fedora:        sudo dnf install mkvtoolnix"
    echo "  Arch:          sudo pacman -S mkvtoolnix-cli"
    echo "  macOS:         brew install mkvtoolnix"
    echo ""
    exit 1
fi

# Check if Videos directory exists
if [ ! -d "$VIDEOS_DIR" ]; then
    echo "Error: ~/Videos directory not found!"
    exit 1
fi

# Count MKV files
mkv_count=$(find "$VIDEOS_DIR" -name "*.mkv" -type f | wc -l)

if [ $mkv_count -eq 0 ]; then
    echo "No MKV files found in ~/Videos directory!"
    exit 1
fi

echo "Found $mkv_count MKV files in ~/Videos"
echo ""

# Show files that will be merged (in order)
echo "Files to be merged (in this order):"
find "$VIDEOS_DIR" -name "*.mkv" -type f | sort -V | nl
echo ""

# Ask for confirmation
read -p "Proceed with merge? (y/N): " confirm
if [[ ! $confirm =~ ^[Yy]$ ]]; then
    echo "Merge cancelled."
    exit 0
fi

echo "Starting merge..."

# Perform the merge
# Build the mkvmerge command with proper syntax (first file, then + for subsequent files)
mkv_files=()
while IFS= read -r -d '' file; do
    mkv_files+=("$file")
done < <(find "$VIDEOS_DIR" -name "*.mkv" -type f -print0 | sort -Vz)

if [ ${#mkv_files[@]} -eq 0 ]; then
    echo "Error: No MKV files found!"
    exit 1
fi

# Build mkvmerge command
merge_cmd="mkvmerge -o \"$TEMP_OUTPUT\" \"${mkv_files[0]}\""
for ((i=1; i<${#mkv_files[@]}; i++)); do
    merge_cmd="$merge_cmd + \"${mkv_files[$i]}\""
done

# Execute the merge
if eval $merge_cmd; then
    echo ""
    echo "‚úÖ Merge completed successfully!"
    
    # Get file size for reference
    file_size=$(du -h "$TEMP_OUTPUT" | cut -f1)
    echo "Output file size: $file_size"
    echo ""
    
    # Prompt for final filename
    while true; do
        echo "Current filename: temp_merged_output.mkv"
        read -p "Enter new filename (without .mkv extension): " new_name
        
        # Check if user entered something
        if [ -z "$new_name" ]; then
            echo "Please enter a filename."
            continue
        fi
        
        # Add .mkv extension if not present
        if [[ ! "$new_name" == *.mkv ]]; then
            new_name="${new_name}.mkv"
        fi
        
        final_path="$VIDEOS_DIR/$new_name"
        
        # Check if file already exists
        if [ -f "$final_path" ]; then
            read -p "File '$new_name' already exists. Overwrite? (y/N): " overwrite
            if [[ ! $overwrite =~ ^[Yy]$ ]]; then
                continue
            fi
        fi
        
        # Rename the file
        if mv "$TEMP_OUTPUT" "$final_path"; then
            echo ""
            echo "‚úÖ File renamed to: $new_name"
            echo "üìÅ Location: $final_path"
            break
        else
            echo "‚ùå Error renaming file. Please try again."
        fi
    done
    
else
    echo "‚ùå Merge failed!"
    # Clean up temp file if it exists
    [ -f "$TEMP_OUTPUT" ] && rm "$TEMP_OUTPUT"
    exit 1
fi

echo ""
echo "üé¨ Merge complete! Your merged video is ready."
