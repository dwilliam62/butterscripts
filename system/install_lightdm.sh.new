#!/bin/bash

# ===========================================
# JustAGuyLinux - Display Manager Installation Script
# Universal LightDM installer for any window manager
# ===========================================

# Clear the screen at the start to ensure script runs at the top of TTY
clear

# Set colors for output
GREEN='\033[0;32m'
CYAN='\033[0;36m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Default settings
AUTO_MODE=false
VERBOSE=true
AUTOLOGIN_USER=""
LOG_FILE=""

# Parse command-line arguments
while [[ $# -gt 0 ]]; do
    case $1 in
        --auto)
            AUTO_MODE=true
            ;;
        --quiet)
            VERBOSE=false
            ;;
        --autologin=*)
            AUTOLOGIN_USER="${1#*=}"
            ;;
        --log=*)
            LOG_FILE="${1#*=}"
            ;;
        --help)
            echo "Usage: $0 [options]"
            echo "Options:"
            echo "  --auto          Automatically install LightDM without prompting"
            echo "  --quiet         Reduce verbosity of output"
            echo "  --autologin=USER  Configure autologin for specified user"
            echo "  --log=FILE      Log output to specified file"
            echo "  --help          Show this help message"
            exit 0
            ;;
        *)
            echo "Unknown option: $1"
            exit 1
            ;;
    esac
    shift
done

# Set up logging if requested
if [[ -n "$LOG_FILE" ]]; then
    exec > >(tee -a "$LOG_FILE") 2>&1
fi

# Function to display script header
show_header() {
    echo -e "${CYAN}=========================================================${NC}"
    echo -e "${CYAN}         DISPLAY MANAGER INSTALLATION SCRIPT             ${NC}"
    echo -e "${CYAN}=========================================================${NC}"
    echo -e "${YELLOW}This script will install and configure LightDM${NC}"
    echo -e "${YELLOW}as the display manager for your system.${NC}"
    echo
}

# Function for verbose output
log() {
    if [[ "$VERBOSE" == true ]]; then
        echo -e "$@"
    fi
}

# Function to handle script exit
cleanup() {
    local status=${1:-0}
    log "\n${CYAN}Script execution completed with status: $status${NC}"
    
    # If in auto mode, provide clear signals to the parent script
    if [[ "$AUTO_MODE" == true && "$status" -ne 0 ]]; then
        echo "DISPLAY_MANAGER_INSTALL_FAILED=true"
    elif [[ "$AUTO_MODE" == true && "$status" -eq 0 ]]; then
        echo "DISPLAY_MANAGER_INSTALL_SUCCESS=true"
    fi
    
    return $status
}

# Trap Ctrl+C
trap 'log "\n${RED}Script interrupted.${NC}"; cleanup 1' INT

# Function to check if a package is installed
is_package_installed() {
    local package="$1"
    dpkg -l | grep -q "^ii  $package"
}

# Function to check if a service is active and enabled
service_active_and_enabled() {
    local service="$1"
    # Check if service is active and enabled
    sudo systemctl is-active --quiet "$service" && sudo systemctl is-enabled --quiet "$service"
}

# Check which display managers are installed and active
check_display_managers() {
    local found_active_dm=false
    local installed_dms=()
    
    # Check LightDM
    if is_package_installed lightdm; then
        installed_dms+=("lightdm")
        if service_active_and_enabled lightdm; then
            found_active_dm=true
            log "${GREEN}LightDM is already installed and enabled.${NC}"
        else
            log "${YELLOW}LightDM is installed but not properly configured.${NC}"
        fi
    fi
    
    # Check GDM3
    if is_package_installed gdm3; then
        installed_dms+=("gdm3")
        if service_active_and_enabled gdm; then
            found_active_dm=true
            log "${YELLOW}GDM3 is currently active.${NC}"
        fi
    fi
    
    # Check SDDM
    if is_package_installed sddm; then
        installed_dms+=("sddm")
        if service_active_and_enabled sddm; then
            found_active_dm=true
            log "${YELLOW}SDDM is currently active.${NC}"
        fi
    fi
    
    # Check LXDM
    if is_package_installed lxdm; then
        installed_dms+=("lxdm")
        if service_active_and_enabled lxdm; then
            found_active_dm=true
            log "${YELLOW}LXDM is currently active.${NC}"
        fi
    fi
    
    # Return overall status
    if [[ "$found_active_dm" == true ]]; then
        if [[ " ${installed_dms[*]} " =~ " lightdm " ]]; then
            # LightDM is already one of the installed display managers
            if service_active_and_enabled lightdm; then
                log "${GREEN}LightDM is already properly installed and active.${NC}"
                return 0
            else
                # LightDM is installed but not active
                log "${YELLOW}LightDM is installed but not active. Will reconfigure it.${NC}"
                return 1
            fi
        else
            # Another display manager is active
            if [[ "$AUTO_MODE" == true ]]; then
                log "${YELLOW}Another display manager is active. Will install LightDM and make it default.${NC}"
                return 1
            else
                log "${YELLOW}Another display manager is currently active.${NC}"
                read -p "Do you want to replace it with LightDM? (y/n): " response
                [[ "$response" =~ ^[Yy]$ ]] && return 1 || return 2
            fi
        fi
    fi
    
    # No display manager found
    log "${YELLOW}No display manager currently active. Will install LightDM.${NC}"
    return 1
}

# Function to install LightDM and dependencies
install_lightdm() {
    log "${GREEN}Installing LightDM and dependencies...${NC}"
    
    # First update package lists
    sudo apt-get update -qq
    
    # Install LightDM and related packages
    if ! sudo apt-get install -y lightdm lightdm-gtk-greeter lightdm-gtk-greeter-settings; then
        log "${RED}Failed to install LightDM. Checking for issues...${NC}"
        
        # Check for specific error conditions
        if ! command -v apt-get &>/dev/null; then
            log "${RED}apt-get command not found. Ensure you're using a Debian-based system.${NC}"
            cleanup 1
            return 1
        fi
        
        # Try to install just lightdm to identify specific package issues
        if ! sudo apt-get install -y lightdm; then
            log "${RED}Failed to install core LightDM package. Check network connection and apt sources.${NC}"
            cleanup 1
            return 1
        else
            log "${YELLOW}Core LightDM installed but failed to install additional components.${NC}"
            # Try individual installations to identify the problematic package
            sudo apt-get install -y lightdm-gtk-greeter || log "${RED}Failed to install lightdm-gtk-greeter.${NC}"
            sudo apt-get install -y lightdm-gtk-greeter-settings || log "${RED}Failed to install lightdm-gtk-greeter-settings.${NC}"
        fi
    fi
    
    # Ensure lightdm is set as the default display manager
    if [[ -f /etc/X11/default-display-manager ]]; then
        echo "/usr/sbin/lightdm" | sudo tee /etc/X11/default-display-manager > /dev/null
    fi
    
    # Enable the service
    sudo systemctl enable lightdm
    
    # Set graphical target as default
    sudo systemctl set-default graphical.target
    
    log "${GREEN}LightDM installation completed.${NC}"
    return 0
}

# Function to configure LightDM for optimal performance
configure_lightdm() {
    log "${GREEN}Configuring LightDM for optimal performance...${NC}"
    
    # Create directories if they don't exist
    sudo mkdir -p /etc/lightdm/lightdm.conf.d
    sudo mkdir -p /etc/lightdm/lightdm-gtk-greeter.conf.d
    
    # Configure autologin if requested
    if [[ -n "$AUTOLOGIN_USER" ]]; then
        log "${YELLOW}Setting up autologin for user: $AUTOLOGIN_USER${NC}"
        
        # Create autologin config
        cat > /tmp/50-autologin.conf << EOF
[Seat:*]
autologin-user=$AUTOLOGIN_USER
autologin-user-timeout=0
EOF
        sudo cp /tmp/50-autologin.conf /etc/lightdm/lightdm.conf.d/
        rm /tmp/50-autologin.conf
    fi
    
    # Configure a minimal, clean greeter
    cat > /tmp/10-minimal-greeter.conf << EOF
[greeter]
theme-name=Adwaita
icon-theme-name=Adwaita
font-name=Sans 10
xft-antialias=true
xft-dpi=96
xft-hintstyle=hintslight
xft-rgba=rgb
indicators=~host;~spacer;~clock;~spacer;~language;~session;~a11y;~power
clock-format=%a %b %d, %H:%M
position=50%,center 50%,center
EOF
    sudo cp /tmp/10-minimal-greeter.conf /etc/lightdm/lightdm-gtk-greeter.conf.d/
    rm /tmp/10-minimal-greeter.conf
    
    log "${GREEN}LightDM configuration completed.${NC}"
    return 0
}

# Ensure xsessions directory exists
ensure_xsessions_dir() {
    if [[ ! -d /usr/share/xsessions ]]; then
        log "${YELLOW}Creating xsessions directory for window manager sessions...${NC}"
        sudo mkdir -p /usr/share/xsessions
    fi
    return 0
}

# Function to validate installation was successful
validate_installation() {
    log "${GREEN}Validating LightDM installation...${NC}"
    local errors=0
    
    # Check if packages are installed
    if ! is_package_installed lightdm; then
        log "${RED}ERROR: LightDM package is not installed.${NC}"
        ((errors++))
    fi
    
    if ! is_package_installed lightdm-gtk-greeter; then
        log "${RED}ERROR: LightDM GTK Greeter is not installed.${NC}"
        ((errors++))
    fi
    
    # Check if service is enabled
    if ! systemctl is-enabled --quiet lightdm; then
        log "${RED}ERROR: LightDM service is not enabled.${NC}"
        ((errors++))
    fi
    
    # Check if default display manager is set correctly
    if [[ -f /etc/X11/default-display-manager ]]; then
        if ! grep -q "/usr/sbin/lightdm" /etc/X11/default-display-manager; then
            log "${RED}ERROR: LightDM is not set as the default display manager.${NC}"
            ((errors++))
        fi
    fi
    
    # Check if xsessions directory exists
    if [[ ! -d /usr/share/xsessions ]]; then
        log "${RED}ERROR: /usr/share/xsessions directory is missing.${NC}"
        ((errors++))
    fi
    
    if [[ $errors -gt 0 ]]; then
        log "${RED}Validation found $errors errors. Installation may be incomplete.${NC}"
        return 1
    else
        log "${GREEN}LightDM installation validated successfully.${NC}"
        return 0
    fi
}

# Main script execution starts here
show_header

# If auto mode is enabled, proceed without confirmation
if [[ "$AUTO_MODE" == true ]]; then
    log "${YELLOW}Running in automatic mode. Will install LightDM without prompting.${NC}"
else
    read -p "Do you want to install LightDM display manager? (y/n): " confirm
    if [[ ! "$confirm" =~ ^[Yy]$ ]]; then
        log "${YELLOW}Installation aborted by user.${NC}"
        cleanup 0
        exit 0
    fi
fi

# Check for existing display managers
check_result=$(check_display_managers)
dm_status=$?

case $dm_status in
    0)  # LightDM already installed and active
        log "${GREEN}LightDM is already installed and active.${NC}"
        ensure_xsessions_dir
        validate_installation
        cleanup $?
        exit $?
        ;;
    1)  # Need to install or reconfigure LightDM
        install_lightdm && configure_lightdm
        ensure_xsessions_dir
        
        # Validate installation
        validate_installation
        validation_status=$?
        
        if [[ $validation_status -eq 0 ]]; then
            log "${GREEN}LightDM has been successfully installed and configured.${NC}"
            log "${YELLOW}NOTE: A system reboot is recommended to apply all changes.${NC}"
        else
            log "${RED}Some issues were detected with the LightDM installation.${NC}"
            log "${YELLOW}Please check the validation errors above.${NC}"
        fi
        
        cleanup $validation_status
        exit $validation_status
        ;;
    2)  # User chose not to replace existing display manager
        log "${YELLOW}No changes made to display manager configuration.${NC}"
        cleanup 0
        exit 0
        ;;
    *)  # Unknown status
        log "${RED}Unexpected status from display manager check.${NC}"
        cleanup 1
        exit 1
        ;;
esac
